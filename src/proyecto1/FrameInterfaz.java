
package proyecto1;

import java.awt.Image;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Timer;

/**
 *
 * @author GuillePC
 */
public class FrameInterfaz extends javax.swing.JFrame {
    
    public Image getIconImage() {
   Image retValue = Toolkit.getDefaultToolkit().
         getImage(ClassLoader.getSystemResource("imagenes/logo.png"));


   return retValue;
}
    
    DefaultListModel modelolista;
    DefaultListModel modelolista1;
    DefaultListModel modelolista2;
    DefaultListModel modelolista3;
    DefaultListModel modelolista4;
    hiloPC pc = new hiloPC();
    
    
    Lista ListaProcesos = new Lista(); // Se declara la lista enlazada de procesos
    Lista ListaInter = new Lista(); // Se declara la lista enlazada de procesos
    int contpro =0; //Contador de procesos
    int contint =0; //Contador de procesos    
    int correlativo =0;
    
    
    public FrameInterfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        Timer tiempo = new Timer(100, new FrameInterfaz.hora());
        tiempo.start();
        modelolista = new DefaultListModel();  
        modelolista1 = new DefaultListModel();  
        modelolista2 = new DefaultListModel();  
        modelolista3 = new DefaultListModel();  
        modelolista4 = new DefaultListModel();  
        jlistProcesos.setModel(modelolista);
        listaInicio.setModel(modelolista2);
        listaProcesos.setModel(modelolista1);
        listaTiempoRestante.setModel(modelolista3);
        listaTiempototal.setModel(modelolista4);
        pc.start();
    }
    
     class hora implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            Date hora = new Date();
            String formato = "hh:mm:ss a";
            SimpleDateFormat format = new SimpleDateFormat(formato);
            Calendar calendario = Calendar.getInstance();
            jHora.setText(String.format(format.format(hora), calendario));
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrearPro = new javax.swing.JButton();
        btnCrearInt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistProcesos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtdireccion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbProceso = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaProcesos = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaInicio = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaTiempototal = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaTiempoRestante = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jHora = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxtTurno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Primer Proyecto");
        setFocusable(false);
        setFocusableWindowState(false);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(1027, 620));
        setPreferredSize(new java.awt.Dimension(300, 580));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCrearPro.setBackground(new java.awt.Color(0, 204, 204));
        btnCrearPro.setText("Crear Proceso");
        btnCrearPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearProActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 150, 30));

        btnCrearInt.setBackground(new java.awt.Color(0, 204, 204));
        btnCrearInt.setText("Crear Interrupción");
        btnCrearInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearIntActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 150, 30));

        jlistProcesos.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(jlistProcesos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 140, 230));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Program Counter (PC)");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 170, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Dirección de Memoria:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 170, 20));

        jtxtdireccion.setEditable(false);
        jtxtdireccion.setBackground(new java.awt.Color(204, 204, 204));
        jtxtdireccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtxtdireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtdireccionActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 60, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("h");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 20, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Proceso:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 70, -1));

        lbProceso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbProceso.setText("proceso");
        getContentPane().add(lbProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 70, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Proceso");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 60, 14));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tiempo restante");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 300, 120, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Estadísticas");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 270, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Turno");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 70, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Inicio");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 300, 60, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Tiempo total");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 300, 90, -1));

        listaProcesos.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setViewportView(listaProcesos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, 80, 230));

        listaInicio.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane3.setViewportView(listaInicio);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 320, 110, 230));

        listaTiempototal.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane4.setViewportView(listaTiempototal);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 80, 230));

        listaTiempoRestante.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane5.setViewportView(listaTiempoRestante);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 320, 80, 230));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/rojo.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 260));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("HORA DEL SISTEMA");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 70, 190, 14));

        jHora.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jHora.setText("HORA");
        getContentPane().add(jHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 110, 160, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/verde.jpg"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 530, 260));

        jtxtTurno.setEditable(false);
        jtxtTurno.setBackground(new java.awt.Color(204, 204, 204));
        jtxtTurno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtxtTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtTurnoActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtTurno, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 60, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Calendarizador");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 110, 20));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/rojo.jpg"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 260));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoAmarillo.jpg"))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, 530, 320));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/azul.png"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 480, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearProActionPerformed
  
        correlativo++;
        contpro++; // variable para contador de procesos
        String IdPro= "P"+ contpro; // Id del proceso 
        String DirecM = " ";
        
       // Numero entero entre 5 y 15 Que sera la duracion del proceso
       // Primer numero es el tope del numero aleatorio
       // El segundo es el numero donde inicia 
       // Y el 1 para que no sea 0
       Random numRa = new Random();
       int Tiempo = numRa.nextInt(15-5) + 5;
       int direc = numRa.nextInt(255) + 1; //Numero Aleatorio para la direccion de memoria 
       DirecM = "0x"+direc; // Asignacion de la direccion de memoria
       
        // Hora actual del sistema     
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss"); //Se filtra para el formato de la hora
        String Hora = hourdateFormat.format(date); //Asignar a una variable String
        String HoraTabla = Hora+" hrs";
                      
        ListaProcesos.InsertarP(2,contpro,DirecM,Tiempo, Hora, correlativo); // Se agrega a la lista enlazada 
        // El primer valor es la prioridad, Segundo ID, Despues el tiempo que es aleatorio, Luego la hora
        modelolista.insertElementAt(IdPro,modelolista.size() ); //Se agrega a la lista
        modelolista1.insertElementAt(IdPro,modelolista1.size() ); //Se agrega a lista de estadísticas
        modelolista2.insertElementAt(HoraTabla,modelolista2.size() ); //Se agrega a lista de estadísticas
        modelolista4.insertElementAt(Tiempo,modelolista4.size() ); //Se agrega a lista de estadísticas
        modelolista3.insertElementAt(Tiempo,modelolista3.size() ); //Se agrega a lista de estadísticas
        
        /*
      if(!pc.espera) {pc.setProceso(ListaProcesos.getInicio()); pc.start();}
      //jButton1ActionPerformed(evt);
        */
        
    }//GEN-LAST:event_btnCrearProActionPerformed

    private void btnCrearIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearIntActionPerformed
       
        correlativo++;
        // Processos se les asignara prioridad 2  
        // Instrucciones Prioridad 1 
        contint++; // variable para contador de Interrupciones
        String IdInte= "I"+ contint; // Id de la interrupcion
        String DirecM ="";
        
       // Numero entero entre 5 y 10 Que sera la duracion de la instruccion
       // Primer numero es el tope del numero aleatorio
       // El segundo es el numero donde inicia 
       // Y el 1 para que no sea 0
       Random numRa = new Random();
       int Tiempo = numRa.nextInt(15-5+1) + 5;
       int direc = numRa.nextInt(255) + 1; //Numero Aleatorio para la direccion de memoria 
       DirecM = "0x"+direc; // Asignacion de la direccion de memoria
       
        // Hora actual del sistema     
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss"); //Se filtra para el formato de la hora
        String Hora = hourdateFormat.format(date); // Asignar a una variable String
        String HoraTabla = Hora+" hrs";
                      
        ListaInter.InsertarP(1,contint,DirecM,Tiempo, Hora, correlativo);
        // Se agrega a la lista enlazada 
        // El primer valor es la prioridad, Segundo ID, Despues el tiempo que es aleatorio, Luego la hora
        
        modelolista.add(0, IdInte); // Se agrega a la lista
        modelolista1.insertElementAt(IdInte,modelolista1.size() ); //Se agrega a lista de estadísticas
        modelolista2.insertElementAt(HoraTabla,modelolista2.size() ); //Se agrega a lista de estadísticas
        modelolista4.insertElementAt(Tiempo,modelolista4.size() ); //Se agrega a lista de estadísticas
        modelolista3.insertElementAt(Tiempo,modelolista3.size() ); //Se agrega a lista de estadísticas
        
        /*
        if(!pc.espera) {pc.setInterupt(ListaInter.getInicio()); pc.start();}
        pc.newInt();*/

    }//GEN-LAST:event_btnCrearIntActionPerformed

    private void jtxtdireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtdireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtdireccionActionPerformed

    private void jtxtTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTurnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtTurnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameInterfaz().setVisible(true);
            }
        });
    }
    public class hiloPC extends Thread{
        boolean proc = false, inter = false, espera = true;
        Nodo interp, procep;
        public void run(){
           procep = ListaProcesos.getInicio();
           interp = ListaInter.getInicio();
           while(true){
                lbProceso.setText("-");
                jtxtdireccion.setText("-");
                if(procep != null){
                    proc = true;
                    espera = false;
                }else procep = ListaProcesos.getInicio();
                if(interp != null){
                    inter = true;
                    espera = false;
                }else interp = ListaInter.getInicio();
                if(!espera){
                    if(inter){
                        boolean newInt=true;
                        interp = ListaInter.getInicio();
                        while (newInt) {                            
                            while(!interp.terminado){
                                lbProceso.setText("I"+Integer.toString(interp.ID));
                                jtxtdireccion.setText(interp.getDirecM());
                                jtxtTurno.setText("I"+ String.valueOf(interp.getID())   );
                                interp.setTiempoRe(interp.getTiempoRe()-1);
                             //   modelolista3.set(interp.getCorrelativo()-1, interp.getTiempoRe());//cambiando tiempo de interrupcion en estadística
                                System.out.println("Atendiendo Interrupccion: " + interp.getDirecM()+ " timepor RE: " + interp.getTiempoRe());
                                if(interp.getTiempoRe()==0){
                                    interp.setTerminado(true);
                                    modelolista3.set(interp.getCorrelativo()-1, interp.getTiempoRe());
                                  //  System.out.println("Interupccion: " + interp.getDirecM() + "Terminado");
                                }
                                
                                try {
                                    Thread.sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(hiloPC.class.getName()).log(Level.SEVERE, null, ex);
                                } 
                            }
                            if(interp.getsiguiente() != ListaInter.getInicio()){
                            interp = interp.getsiguiente();
                            }else newInt = false;
                            
                        }
                        
                    }
                    if(proc){
                        if(!procep.isTerminado()){
                            procep.setTiempoRe(procep.getTiempoRe()-1);
                            modelolista3.set(procep.getCorrelativo()-1, procep.getTiempoRe());//cambiando tiempo de interrupcion en estadística
                            lbProceso.setText("P"+Integer.toString(procep.ID));
                            jtxtdireccion.setText(procep.getDirecM());
                            jtxtTurno.setText("P"+String.valueOf(procep.getID()) );
                         //   System.out.println("Atendiendo Proceso: " + procep.getID() + " time por RE: " + procep.getTiempoRe());
                            if(procep.getTiempoRe()==0){
                                procep.setTerminado(true);
                                modelolista3.set(procep.getCorrelativo()-1, procep.getTiempoRe());//cambiando tiempo de interrupcion en estadística
                              //  System.out.println("Proceso: " + procep.getID() + "Terminado");
                            }
                        }
                        procep = procep.getsiguiente();
                    }
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(hiloPC.class.getName()).log(Level.SEVERE, null, ex);
                } 
           }
            
        }   

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearInt;
    private javax.swing.JButton btnCrearPro;
    private javax.swing.JLabel jHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> jlistProcesos;
    private javax.swing.JTextField jtxtTurno;
    private javax.swing.JTextField jtxtdireccion;
    private javax.swing.JLabel lbProceso;
    private javax.swing.JList<String> listaInicio;
    private javax.swing.JList<String> listaProcesos;
    private javax.swing.JList<String> listaTiempoRestante;
    private javax.swing.JList<String> listaTiempototal;
    // End of variables declaration//GEN-END:variables
}

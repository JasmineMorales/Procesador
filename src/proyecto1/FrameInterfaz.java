
package proyecto1;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Timer;

/**
 *
 * @author GuillePC
 */
public class FrameInterfaz extends javax.swing.JFrame {
    DefaultListModel modelolista;
    hiloPC pc = new hiloPC();
    
    
    Lista ListaProcesos = new Lista(); // Se declara la lista enlazada de procesos
    Lista ListaInter = new Lista(); // Se declara la lista enlazada de procesos
    int contpro =0; //Contador de procesos
    int contint =0; //Contador de procesos    
    
    
    
    public FrameInterfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        Timer tiempo = new Timer(100, new FrameInterfaz.hora());
        tiempo.start();
        modelolista = new DefaultListModel();  
        jlistProcesos.setModel(modelolista);
        pc.start();
    }
    
    class hora implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            Date hora = new Date();
            String formato = "hh:mm:ss a";
            SimpleDateFormat format = new SimpleDateFormat(formato);
            Calendar calendario = Calendar.getInstance();
            jHora.setText(String.format(format.format(hora), calendario));
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrearPro = new javax.swing.JButton();
        btnCrearInt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistProcesos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtdireccion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbProceso = new javax.swing.JLabel();
        jHora = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCrearPro.setBackground(new java.awt.Color(0, 204, 204));
        btnCrearPro.setText("Crear Proceso");
        btnCrearPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearProActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 170, -1));

        btnCrearInt.setBackground(new java.awt.Color(0, 204, 204));
        btnCrearInt.setText("Crear Interrupcion");
        btnCrearInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearIntActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 170, -1));

        jlistProcesos.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(jlistProcesos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 170, 230));

        jLabel2.setText("Program Counter (PC)");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 200, 40));

        jLabel3.setText("Direccion de Memoria:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 126, 140, 20));

        jtxtdireccion.setEditable(false);
        jtxtdireccion.setBackground(new java.awt.Color(204, 204, 204));
        jtxtdireccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtxtdireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtdireccionActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 60, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("h");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 20, 20));

        jLabel5.setText("Proceso:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 50, -1));

        lbProceso.setText("proceso");
        getContentPane().add(lbProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 70, -1));

        jHora.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jHora.setText("HORA");
        getContentPane().add(jHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 150, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("HORA DEL SISTEMA");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 200, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/maxresdefault.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 420, 270));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/rojo.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 270));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/azul.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 440, 270));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/amarillo.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 420, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearProActionPerformed
     
        
        
        contpro++; // variable para contador de procesos
        String IdPro= "P"+ contpro; // Id del proceso 
        String DirecM = " ";
        
       // Numero entero entre 5 y 15 Que sera la duracion del proceso
       // Primer numero es el tope del numero aleatorio
       // El segundo es el numero donde inicia 
       // Y el 1 para que no sea 0
       Random numRa = new Random();
       int Tiempo = numRa.nextInt(15-5) + 5;
       int direc = numRa.nextInt(255) + 1; //Numero Aleatorio para la direccion de memoria 
       DirecM = "0x"+direc; // Asignacion de la direccion de memoria
       
        // Hora actual del sistema     
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss"); //Se filtra para el formato de la hora
        String Hora = hourdateFormat.format(date); //Asignar a una variable String
                      
        ListaProcesos.InsertarP(2,IdPro,DirecM,Tiempo, Hora ); // Se agrega a la lista enlazada 
        // El primer valor es la prioridad, Segundo ID, Despues el tiempo que es aleatorio, Luego la hora
        modelolista.insertElementAt(IdPro,modelolista.size() ); //Se agrega a la lista 
    }//GEN-LAST:event_btnCrearProActionPerformed

    private void btnCrearIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearIntActionPerformed
       
        // Processos se les asignara prioridad 2  
        // Instrucciones Prioridad 1 
        contint++; // variable para contador de Interrupciones
        String IdInte= "I"+ contint; // Id de la interrupcion
        String DirecM ="";
        
       // Numero entero entre 5 y 10 Que sera la duracion de la instruccion
       // Primer numero es el tope del numero aleatorio
       // El segundo es el numero donde inicia 
       // Y el 1 para que no sea 0
       Random numRa = new Random();
       int Tiempo = numRa.nextInt(15-5+1) + 5;
       
        // Hora actual del sistema     
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss"); //Se filtra para el formato de la hora
        String Hora = hourdateFormat.format(date); // Asignar a una variable String
                      
        ListaInter.InsertarP(1,DirecM,IdInte,Tiempo, Hora );
        // Se agrega a la lista enlazada 
        // El primer valor es la prioridad, Segundo ID, Despues el tiempo que es aleatorio, Luego la hora
        
        modelolista.add(0, IdInte); // Se agrega a la lista
    }//GEN-LAST:event_btnCrearIntActionPerformed

    private void jtxtdireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtdireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtdireccionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameInterfaz().setVisible(true);
            }
        });
    }
    public class hiloPC extends Thread{
        boolean proc = false, inter = false, espera = true;
        Nodo interp, procep;
        public void run(){
           procep = ListaProcesos.getInicio();
           interp = ListaInter.getInicio();
           while(true){
                lbProceso.setText("-");
                jtxtdireccion.setText("-");
                if(procep != null){
                    proc = true;
                    espera = false;
                }else procep = ListaProcesos.getInicio();
                if(interp != null){
                    inter = true;
                    espera = false;
                }else interp = ListaInter.getInicio();
                if(!espera){
                    if(inter){
                        boolean newInt=true;
                        interp = ListaInter.getInicio();
                        while (newInt) {                            
                            while(!interp.terminado){
                                lbProceso.setText(interp.ID);
                                jtxtdireccion.setText(interp.getDirecM());
                                interp.setTiempoRe(interp.getTiempoRe()-1);
                                System.out.println("Atendiendo Interrupccion: " + interp.getDirecM()+ " timepor RE: " + interp.getTiempoRe());
                                if(interp.getTiempoRe()==0){
                                    interp.setTerminado(true);
                                    System.out.println("INterupccion: " + interp.getDirecM() + "Terminado");
                                }
                                
                                try {
                                    Thread.sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(hiloPC.class.getName()).log(Level.SEVERE, null, ex);
                                } 
                            }
                            if(interp.getsiguiente() != ListaInter.getInicio()){
                            interp = interp.getsiguiente();
                            }else newInt = false;
                            
                        }
                        
                    }
                    if(proc){
                        if(!procep.isTerminado()){
                            lbProceso.setText(procep.ID);
                            jtxtdireccion.setText(procep.getDirecM());
                            procep.setTiempoRe(procep.getTiempoRe()-1);
                            System.out.println("Atendiendo Proceso: " + procep.getID() + " timepor RE: " + procep.getTiempoRe());
                            if(procep.getTiempoRe()==0){
                                procep.setTerminado(true);
                                System.out.println("Proceso: " + procep.getID() + "Terminado");
                            }
                        }
                        procep = procep.getsiguiente();
                    }
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(hiloPC.class.getName()).log(Level.SEVERE, null, ex);
                } 
           }
            
        }   

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearInt;
    private javax.swing.JButton btnCrearPro;
    private javax.swing.JLabel jHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> jlistProcesos;
    private javax.swing.JTextField jtxtdireccion;
    private javax.swing.JLabel lbProceso;
    // End of variables declaration//GEN-END:variables
}
